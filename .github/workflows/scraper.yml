name: scraper

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *' # every hour at minute 0 (UTC)

permissions:
  contents: write

concurrency:
  group: scraper-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run-scraper:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Files/requirements.txt

      - name: Run scraper
        env:
          ENABLE_HEALTH_CHECK: '1'
          DISABLE_CONFIG_FILTERS: '1'
          HEALTH_CHECK_ALL: '1'
          KEEP_UNTESTED_ON_HEALTH: '1'
          HEALTH_CHECK_CONCURRENCY: '6'
          XRAY_TEST_TIMEOUT: '8'
          HEALTH_CHECK_DEADLINE_SECONDS: '360'
          FIRST_PHASE_HEALTH_CHECK_CONCURRENCY: '6'
          FIRST_PHASE_MAX_HEALTH_CHECKS_PER_PROTOCOL: '1000000'
          FIRST_PHASE_MAX_HEALTH_CHECKS_TOTAL: '1000000'
          MAX_HEALTH_CHECKS_PER_PROTOCOL: '1000000'
          MAX_HEALTH_CHECKS_TOTAL: '1000000'
          MAX_HEALTHY_PER_PROTOCOL: '1000000'
        run: |
          python Files/scrip.py

      - name: Commit and push changes
        run: |
          if git diff --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "chore: auto-update configs and README [skip ci]"
          git push
name: scraper

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      ENABLE_HEALTH_CHECK: '1'
      HEALTH_CHECK_CONCURRENCY: '8'
      MAX_HEALTH_CHECKS_PER_PROTOCOL: '20'
      MAX_HEALTH_CHECKS_TOTAL: '80'
      XRAY_TEST_TIMEOUT: '6'
      HEALTH_CHECK_DEADLINE_SECONDS: '240'
      XRAY_VERSION: 'v25.1.20'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Files/requirements.txt

      - name: Restore Xray cache
        uses: actions/cache@v4
        with:
          path: Files/xray-bin
          key: xray-${{ env.XRAY_VERSION }}-${{ runner.os }}

      - name: Ensure Xray binary permissions
        shell: bash
        run: |
          set -e
          if [ -d Files/xray-bin ]; then
            find Files/xray-bin -type f -name "xray" -exec chmod +x {} + || true
            find Files/xray-bin -type f -name "xray.exe" -exec chmod +x {} + || true
          fi

      - name: Run scraper
        run: |
          python Files/scrip.py

      - name: Clean Xray cache files
        if: always()
        run: |
          rm -rf Files/xray-bin || true

      - name: Upload configs artifact
        uses: actions/upload-artifact@v4
        with:
          name: configs
          path: |
            configs
            README.md

      - name: Commit and push changes
        shell: bash
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Always base our commit on the latest remote main to avoid rebase/pull issues
          git fetch origin
          git checkout -B main origin/main
          git add -A
          if git diff --cached --quiet; then
            echo "No changes detected. Skipping commit."
          else
            echo "Changes detected. Committing and pushing..."
            git commit -m "docs: Update README and config files ðŸ¤– [skip ci]"
            git push origin main
          fi

