name: Daily TrustLink Optimizer

on:
  schedule:
    # هر روز در ساعت 00:00 UTC (03:30 تهران)
    - cron: '0 0 * * *'
  workflow_dispatch:  # امکان اجرای دستی
  push:
    branches: [ main ]
    paths:
      - 'daily-tester/daily_trustlink_tester.py'
      - 'trustlink/trustlink.txt'

jobs:
  daily-optimize:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install aiohttp beautifulsoup4 pytz jdatetime
        
    - name: Create necessary directories
      run: |
        mkdir -p daily-tester/logs
        mkdir -p daily-tester/output
        mkdir -p Files/xray-bin
        
    - name: Download Xray binary
      run: |
        cd Files/xray-bin
        # دانلود Xray برای Linux
        wget -O xray.zip "https://github.com/XTLS/Xray-core/releases/latest/download/Xray-linux-64.zip"
        unzip xray.zip
        chmod +x xray
        rm xray.zip
        # دانلود فایل‌های geoip و geosite
        wget -O geoip.dat "https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat"
        wget -O geosite.dat "https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat"
        
    - name: Run Daily TrustLink Optimizer
      working-directory: ./daily-tester
      run: |
        python daily_trustlink_tester.py
        
    - name: Upload optimization results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: daily-optimization-results
        path: |
          daily-tester/logs/daily_tester.log
          daily-tester/output/.test_results.json
          daily-tester/output/trustlink_tested.txt
        retention-days: 7
        
    - name: Update TrustLink file with best configs
      if: success()
      run: |
        # کپی کردن بهترین کانفیگ‌ها به فایل اصلی TrustLink
        if [ -f "daily-tester/output/trustlink_tested.txt" ]; then
          cp daily-tester/output/trustlink_tested.txt trustlink/trustlink.txt
          echo "✅ فایل TrustLink با بهترین کانفیگ‌ها به‌روزرسانی شد"
        else
          echo "❌ فایل نتایج تست یافت نشد"
          exit 1
        fi
        
    - name: Commit and push optimized TrustLink
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # اضافه کردن فایل‌های به‌روزرسانی شده
        git add trustlink/trustlink.txt
        git add daily-tester/output/trustlink_tested.txt
        git add daily-tester/output/.test_results.json
        git add daily-tester/logs/daily_tester.log
        
        # بررسی تغییرات
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "🤖 Daily TrustLink Optimization - $(date -u +'%Y-%m-%d %H:%M:%S UTC') - Kept top 10 best configs"
          git push
        fi
        
    - name: Create optimization summary
      if: always()
      run: |
        echo "## Daily TrustLink Optimization Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "daily-tester/output/.test_results.json" ]; then
          echo "### Optimization Results:" >> $GITHUB_STEP_SUMMARY
          cat daily-tester/output/.test_results.json | jq -r '.last_test_stats | "**Total Configs Tested:** \(.total_configs)\n**Successful Connections:** \(.successful)\n**Failed Connections:** \(.failed)\n**Best Configs Kept:** \(.best_configs)"' >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Protocol Statistics:" >> $GITHUB_STEP_SUMMARY
          cat daily-tester/output/.test_results.json | jq -r '.protocol_stats | to_entries[] | "**\(.key):** \(.value.successful)/\(.value.total) successful"' >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "daily-tester/output/trustlink_tested.txt" ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Final Result:" >> $GITHUB_STEP_SUMMARY
          echo "**$(wc -l < daily-tester/output/trustlink_tested.txt) best configs** selected and saved to TrustLink" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "**Optimization Time:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "**Next Run:** Tomorrow at 00:00 UTC" >> $GITHUB_STEP_SUMMARY
