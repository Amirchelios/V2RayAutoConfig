name: "Shadowsocks Tester - 6 Hourly Execution"

on:
  schedule:
    # اجرای خودکار هر 6 ساعت
    # ساعت 00:00, 06:00, 12:00, 18:00 UTC (03:30, 09:30, 15:30, 21:30 تهران)
    - cron: "0 */6 * * *"
  
  # اجرای دستی از طریق GitHub Actions
  workflow_dispatch:
    inputs:
      test_mode:
        description: "حالت تست (سریع/کامل)"
        required: true
        default: "سریع"
        type: choice
        options:
          - "سریع"
          - "کامل"

  # اجرا در push به main branch
  push:
    branches: [ main, master ]
    paths:
      - 'ss/**'
      - 'configs/raw/ShadowSocks.txt'

permissions:
  contents: write

concurrency:
  group: ss-tester-6hourly-${{ github.ref }}
  cancel-in-progress: false

jobs:
  ss-tester:
    runs-on: ubuntu-latest
    timeout-minutes: 90  # timeout برای اجرای 6 ساعته
    
    steps:
    - name: "Checkout Repository"
      uses: actions/checkout@v4
      
    - name: "Setup Python"
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: "Install Dependencies"
      run: |
        python -m pip install --upgrade pip
        cd ss
        pip install -r requirements.txt
        
    - name: "Create Required Directories"
      run: |
        mkdir -p logs
        mkdir -p trustlink
        
    - name: "Check Source File"
      run: |
        echo "Checking source file..."
        if [ -f "configs/raw/ShadowSocks.txt" ]; then
          echo "✅ Source file exists"
          echo "File size: $(du -h configs/raw/ShadowSocks.txt | cut -f1)"
          echo "Line count: $(wc -l < configs/raw/ShadowSocks.txt)"
        else
          echo "❌ Source file not found: configs/raw/ShadowSocks.txt"
          echo "Available files in configs/raw/:"
          ls -la configs/raw/ || echo "configs/raw/ directory not found"
        fi
        
    - name: "Run Shadowsocks Tester"
      run: |
        echo "Starting Shadowsocks Tester (6 Hourly Run)..."
        cd ss
        echo "Current directory: $(pwd)"
        echo "Python version: $(python --version)"
        echo "Available files:"
        ls -la
        
        # اجرای تستر Shadowsocks
        echo "🚀 Running Shadowsocks Tester..."
        if python ss_tester.py; then
          echo "✅ Shadowsocks Tester completed successfully"
        else
          echo "❌ Shadowsocks Tester failed with exit code $?"
          echo "Checking for any output files..."
          ls -la ../trustlink/ || echo "trustlink directory not accessible"
          ls -la ../logs/ || echo "logs directory not accessible"
        fi
        
    - name: "Check Results"
      run: |
        echo "Checking results..."
        
        # Check if output file exists
        if [ -f "trustlink/trustlink_ss.txt" ]; then
          echo "✅ File trustlink_ss.txt created successfully"
          echo "Line count: $(wc -l < trustlink/trustlink_ss.txt)"
          echo "File size: $(du -h trustlink/trustlink_ss.txt | cut -f1)"
          echo "First few lines:"
          head -5 trustlink/trustlink_ss.txt
        else
          echo "❌ Output file not found: trustlink/trustlink_ss.txt"
        fi
        
        # Check metadata file
        if [ -f "trustlink/.trustlink_ss_metadata.json" ]; then
          echo "✅ Metadata file exists"
          echo "Metadata content:"
          cat trustlink/.trustlink_ss_metadata.json
        else
          echo "❌ Metadata file not found"
        fi
        
    - name: "Commit and Push Results"
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # اضافه کردن فایل‌های جدید
        git add trustlink/trustlink_ss.txt
        git add trustlink/.trustlink_ss_metadata.json
        git add logs/ss_tester.log
        
        # بررسی تغییرات
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "🤖 Shadowsocks Tester 6-Hourly Update - $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git push
        fi
        
    - name: "Upload Logs as Artifacts"
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: "ss-tester-6hourly-logs"
        path: |
          logs/
          trustlink/
        retention-days: 7
        
    - name: "Create Summary"
      if: always()
      run: |
        echo "## Shadowsocks Tester 6-Hourly Run Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Execution Time:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "**Schedule:** Every 6 hours (00:00, 06:00, 12:00, 18:00 UTC)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "trustlink/trustlink_ss.txt" ]; then
          count=$(wc -l < trustlink/trustlink_ss.txt)
          echo "**Shadowsocks Configs Generated:** $count" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "trustlink/.trustlink_ss_metadata.json" ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Metadata:" >> $GITHUB_STEP_SUMMARY
          cat trustlink/.trustlink_ss_metadata.json | jq -r '.last_stats | "**New Added:** \(.new_added)\n**Working Configs:** \(.working_configs)\n**Iran Accessible:** \(.iran_accessible)"' >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "**Next Run:** Scheduled for next 6-hour interval" >> $GITHUB_STEP_SUMMARY
        echo "**Schedule:** 00:00, 06:00, 12:00, 18:00 UTC daily" >> $GITHUB_STEP_SUMMARY
